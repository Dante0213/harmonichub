name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'
      
      - name: Update browserslist DB
        run: npx update-browserslist-db@latest
      
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npm install terser --no-save
          echo "의존성 설치 완료"
        
      - name: Debug environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Directory contents:"
          ls -la
          
      # 빌드 과정에서 메모리 문제를 해결하기 위해 NODE_OPTIONS 환경 변수 설정
      - name: Build with increased memory
        run: |
          export NODE_OPTIONS="--max-old-space-size=8192"
          export GENERATE_SOURCEMAP=false
          export CI=false
          echo "NODE_OPTIONS: $NODE_OPTIONS"
          npm run build || (echo "빌드 실패 - 오류 로그 확인" && exit 1)
      
      - name: Debug build output
        run: |
          echo "Build directory contents:"
          ls -la dist/ || echo "dist directory not found"
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      # 수정: 우리 자체 404.html 파일 사용
      - name: Ensure 404.html exists
        run: |
          if [ -f "public/404.html" ]; then
            cp public/404.html dist/404.html
            echo "public/404.html을 dist/404.html로 복사했습니다"
          else
            cp dist/index.html dist/404.html
            echo "index.html을 404.html로 복사했습니다"
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          retention-days: 1
        id: upload-artifact

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
