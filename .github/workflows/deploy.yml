
name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'
      
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Update browserslist DB
        run: bun update caniuse-lite
      
      - name: Install dependencies
        run: |
          npm install --no-package-lock
          npm install terser --no-save
          echo "Dependencies installed successfully"
        
      - name: Debug environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Bun version: $(bun --version)"
          echo "Directory contents:"
          ls -la
          
      # Set NODE_OPTIONS environment variable to solve memory issues during build
      - name: Build with increased memory
        run: |
          export NODE_OPTIONS="--max-old-space-size=8192"
          export GENERATE_SOURCEMAP=false
          export CI=false
          echo "NODE_OPTIONS: $NODE_OPTIONS"
          npm run build || (echo "Build failed - check error logs" && exit 1)
      
      - name: Debug build output
        run: |
          if [ -d "dist" ]; then
            echo "✅ dist/ directory exists."
            ls -la dist/
          else
            echo "❌ dist/ directory NOT found! Build might have failed."
            exit 1
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      # Using our own 404.html file
      - name: Ensure 404.html exists
        run: |
          if [ -f "public/404.html" ]; then
            cp public/404.html dist/404.html
            echo "Copied public/404.html to dist/404.html"
          else
            cp dist/index.html dist/404.html
            echo "Copied index.html to 404.html"
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          name: github-pages
          retention-days: 1
        id: upload-artifact

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          token: ${{ secrets.GITHUB_TOKEN }}
