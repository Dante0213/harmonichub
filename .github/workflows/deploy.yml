
name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Debug environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Directory contents:"
          ls -la
          
      - name: Build
        run: npm run build
        env:
          CI: false
          NODE_OPTIONS: "--max-old-space-size=4096"
      
      - name: Debug build output
        run: |
          echo "Build directory contents:"
          ls -la dist/ || echo "dist directory not found"
          if [ -f "dist/index.html" ]; then
            echo "Index.html found!"
          else
            echo "Index.html NOT found!"
          fi
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Create .nojekyll file
        run: |
          mkdir -p dist
          touch dist/.nojekyll
      
      - name: Ensure 404.html exists
        run: |
          if [ ! -f "dist/404.html" ] && [ -f "public/404.html" ]; then
            mkdir -p dist
            cp public/404.html dist/404.html
            echo "Copied 404.html from public to dist"
          elif [ ! -f "dist/404.html" ]; then
            mkdir -p dist
            echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>Page Not Found</title></head><body><h1>404 - Page Not Found</h1></body></html>" > dist/404.html
            echo "Created default 404.html"
          else
            echo "404.html already exists in dist folder"
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
